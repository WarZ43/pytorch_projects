from lstm_weights import LSTMWeights
import math
import numpy as np

#initialize LSTM net with 5 cells and 1 conv layer at the end
weights = LSTMWeights(5)
airline_passengers = np.array( [
    112, 118, 132, 129, 121, 135, 148, 148, 136, 119, 104, 118,
    115, 126, 141, 135, 125, 149, 170, 170, 158, 133, 114, 140,
    145, 150, 178, 163, 172, 178, 199, 199, 184, 162, 146, 166,
    171, 180, 193, 181, 183, 218, 230, 242, 209, 191, 172, 194,
    196, 196, 236, 235, 229, 243, 264, 272, 237, 211, 180, 201,
    204, 188, 235, 227, 234, 264, 302, 293, 259, 229, 203, 229,
    242, 233, 267, 269, 270, 315, 364, 347, 312, 274, 237, 278,
    284, 277, 317, 313, 318, 374, 413, 405, 355, 306, 271, 306,
    315, 301, 356, 348, 355, 422, 465, 467, 404, 347, 305, 336,
    340, 318, 362, 348, 363, 435, 491, 505, 404, 359, 310, 337,
    360, 342, 406, 396, 420, 472, 548, 559, 463, 407, 362, 405,
    417, 391, 419, 461, 472, 535, 622, 606, 508, 461, 390, 432
], dtype = float)
airline_passengers = airline_passengers/622
#train lstm with 50000 steps, 0.001 learning rate
print(weights.bptt(airline_passengers,50000,0.001))
print(weights.w)
print(weights.b)
# outputs:
# loss: 0.0018635248413708348
# weights.w: [[[ 0.66020801 -0.47700476 -0.04247118 -0.70132159]
#   [ 0.91622187  0.41128773  0.26892429  1.83633487]]

#  [[ 0.04500948 -0.03905935 -0.03403819  0.13145711]
#   [-0.4512237  -0.7244195  -0.47247543  0.96230146]]

#  [[ 0.44457277  0.26040945 -0.20891589 -0.74941467]
#   [ 0.61133859 -0.20530637 -0.86008985 -0.12012114]]

#  [[ 0.38448544 -0.28016626  0.63839279 -0.07505351]
#   [ 0.26490235 -0.45984866 -0.05249357 -1.06789921]]

#  [[ 0.55195894  0.24122426  0.56535885 -0.07344559]
#   [ 0.09824059  0.04282055 -0.35728989  0.42671588]]]
# weights.b: [[ 1.64772457 -0.03281097  0.04606833 -0.48614869]
#  [ 1.01607368  0.04041482 -0.69857091 -0.10559419]
#  [ 0.90129294  0.26117218  0.33047055  0.29876366]
#  [ 1.41754729  0.13424569  0.44237193  0.2586337 ]
#  [ 1.02704929 -0.00383405 -0.20690801 -0.07070657]]