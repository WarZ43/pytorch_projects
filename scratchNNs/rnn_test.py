from rnn_weights import RNNWeights
import math
import numpy as np

#initialie RNN with 5 cells
weights = RNNWeights(5)
airline_passengers = np.array( [
    112, 118, 132, 129, 121, 135, 148, 148, 136, 119, 104, 118,
    115, 126, 141, 135, 125, 149, 170, 170, 158, 133, 114, 140,
    145, 150, 178, 163, 172, 178, 199, 199, 184, 162, 146, 166,
    171, 180, 193, 181, 183, 218, 230, 242, 209, 191, 172, 194,
    196, 196, 236, 235, 229, 243, 264, 272, 237, 211, 180, 201,
    204, 188, 235, 227, 234, 264, 302, 293, 259, 229, 203, 229,
    242, 233, 267, 269, 270, 315, 364, 347, 312, 274, 237, 278,
    284, 277, 317, 313, 318, 374, 413, 405, 355, 306, 271, 306,
    315, 301, 356, 348, 355, 422, 465, 467, 404, 347, 305, 336,
    340, 318, 362, 348, 363, 435, 491, 505, 404, 359, 310, 337,
    360, 342, 406, 396, 420, 472, 548, 559, 463, 407, 362, 405,
    417, 391, 419, 461, 472, 535, 622, 606, 508, 461, 390, 432
], dtype = float)
#scale data down
airline_passengers = airline_passengers/622
#train for 100,000 steps, 0.0001 learnig rate
print(weights.bptt(airline_passengers,100000,0.0001))
print(weights.w)
print(weights.b)
# output:
# loss: 0.0025918229956611314
# weights.w: [[-0.80026408  0.89461895]
#  [ 0.64917482 -1.21691774]
#  [-0.34119674  0.68323432]
#  [-0.36826907  1.04598414]
#  [ 0.6691286   0.53002995]]
# weights.b: [-0.05168948 -0.05012262  0.28385357 -0.45462518  0.02601862]